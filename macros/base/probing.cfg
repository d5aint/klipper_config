[gcode_macro ACTIVATE_PROBE]
description: Put the machine in a state being able to probe
variable_temperature: 0
gcode:
    {% set safe_extruder_temp = printer["gcode_macro _USER_VARIABLES"].safe_extruder_temp|float %}

    SAVE_GCODE_STATE NAME=BEFORE_TAP_ACTION

    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    SET_GCODE_VARIABLE MACRO=ACTIVATE_PROBE VARIABLE=temperature VALUE={TARGET_TEMP}

    {% if TARGET_TEMP > safe_extruder_temp %}
        { action_respond_info('Extruder temperature target of %.1fC is too high for TAP probing, lowering to %.1fC' % (TARGET_TEMP, safe_extruder_temp)) }
        M106 S255
        M109 S{safe_extruder_temp}
        M106 S0
    {% else %}
        {% if ACTUAL_TEMP > safe_extruder_temp + 3 %}
            M106 S255
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={safe_extruder_temp}
            M106 S0
        {% endif %}
    {% endif %}


[gcode_macro DEACTIVATE_PROBE]
description: Revert the machine to a normal state after probing
gcode:
    {% set zhop = printer["gcode_macro _USER_VARIABLES"].zhop %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES"].zhop_speed * 60 %}
    {% set z_safe = printer.toolhead.position.z + zhop %}

    {% if z_safe > printer.toolhead.axis_maximum.z %}
        {% set z_safe = printer.toolhead.axis_maximum.z %}
    {% endif %}
    G90
    G1 Z{z_safe} F{Sz}

    {% set old_target_temperature = printer["gcode_macro ACTIVATE_PROBE"].temperature %}
    M109 S{old_target_temperature}
    RESTORE_GCODE_STATE NAME=BEFORE_TAP_ACTION
