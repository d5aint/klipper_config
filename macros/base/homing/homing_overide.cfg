[gcode_macro _CG28]
description: Homing only if necessary
gcode:
    STATUS_LEDS COLOR="HOMING"
    
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    
    STATUS_LEDS COLOR="READY"

[homing_override]
axes: xyz
#set_position_z: 0
gcode:
    {% set verbose        = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set homing_zhop    = printer["gcode_macro _USER_VARIABLES"].homing_zhop|float %}
    {% set zhop_speed     = printer["gcode_macro _USER_VARIABLES"].zhop_speed * 60 %}
	{% set wait_time      = printer["gcode_macro _USER_VARIABLES"].sensorless_wait_time %}
    {% set probe_xy_speed = printer["gcode_macro _USER_VARIABLES"].homing_travel_speed * 60 %}
    {% set homing_accel   = printer["gcode_macro _USER_VARIABLES"].homing_travel_accel %}
    {% set homing_cur     = printer["gcode_macro _USER_VARIABLES"].sensorless_current_factor / 100 %}
	
    {% set x_backoff, Y_BACKOFF = printer["gcode_macro _USER_VARIABLES"].homing_backoff_distance_xy|map('float') %}
	{% set homing_bounce = -5 %}
	{% set bounce_speed = printer["gcode_macro _USER_VARIABLES"].homing_backoff_speed %}
    {% set x_position_endstop = printer["configfile"].config["stepper_x"]["position_endstop"]|float %}
    {% set y_position_endstop = printer["configfile"].config["stepper_y"]["position_endstop"]|float %}
    {% set x_position_center  = printer.toolhead.axis_maximum.x|int/2 - printer.toolhead.axis_minimum.x|int/2 %}
    {% set y_position_center  = printer.toolhead.axis_maximum.y|int/2 - printer.toolhead.axis_minimum.y|int/2 %}
    
    # Read the current acceleration max
    {% set cur_accel = printer.toolhead.max_accel %}
    {% set cur_accel_to_decel = printer.toolhead.max_accel_to_decel %}
	
	# The XY-axis homing current (in Amps)
	{% set driver_config_x = printer.configfile.settings['tmc2209 stepper_x'].run_current %}
    {% set driver_config_y = printer.configfile.settings['tmc2209 stepper_y'].run_current %}
    {% set x_homing_cur = homing_cur * driver_config_x %}
    {% set y_homing_cur = homing_cur * driver_config_y %}
	
    # Read requested homing axis
    {% set requested = {'x': False,
                        'y': False,
                        'z': False} %}
	
    {% if   not 'X' in params
        and not 'Y' in params 
        and not 'Z' in params %}
        {% set X, Y, Z = True, True, True %}
    {% else %}
        {% if 'X' in params %}
            {% set X = True %}
            {% set null = requested.update({'x': True}) %}
        {% endif %}
		
        {% if 'Y' in params %}
            {% set Y = True %}
            {% set null = requested.update({'y': True}) %}
        {% endif %}
		
        {% if 'Z' in params %}
            {% set Z = True %}
            {% set null = requested.update({'z': True}) %}
        {% endif %}
    {% endif %}
    
	BED_MESH_CLEAR
    STATUS_LEDS COLOR="HOMING"
    
    # Pre-homing "unsafe" z-hop to protect bed
	{% if Z %}
        {% if ('z' in printer.toolhead.homed_axes) %}
            {% if (printer.toolhead.position.z < homing_zhop) %}
                {% if verbose %}
                    { action_respond_info("Z too low, performing ZHOP") }
                {% endif %}
                G0 Z{homing_zhop} F{zhop_speed}
            {% endif %}
        {% else %}
            {% if verbose %}
                { action_respond_info("Z not homed, forcing full G28") }
            {% endif %}
            SET_KINEMATIC_POSITION X=0 Y=0 Z=0
            G0 Z{homing_zhop} F{zhop_speed}
            {% set X, Y, Z = True, True, True %}
        {% endif %}
    {% endif %}
	
    # X and Y homing
    {% if X and Y %}
	    {% if verbose %}
	        { action_respond_info("Homing X and Y") }
        {% endif %}
        _HOME_X CURRENT={x_homing_cur} ACCEL={homing_accel} BOUNCE={x_backoff} BOUNCE_SPEED={bounce_speed} WAIT_TIME={wait_time}
        _HOME_Y CURRENT={y_homing_cur} ACCEL={homing_accel} BOUNCE={Y_BACKOFF} BOUNCE_SPEED={bounce_speed} WAIT_TIME={wait_time}
    {% elif X %}
	    {% if verbose %}
            { action_respond_info("Homing X") }
        {% endif %}
        _HOME_X CURRENT={X_HOMING_CUR} ACCEL={homing_accel} BOUNCE={x_backoff} BOUNCE_SPEED={bounce_speed} WAIT_TIME={wait_time}
    {% elif Y %}
	    {% if verbose %}
            { action_respond_info("Homing Y") }
        {% endif %}
        _HOME_Y CURRENT={y_homing_cur} ACCEL={homing_accel} BOUNCE={y_backoff} BOUNCE_SPEED={bounce_speed} WAIT_TIME={wait_time}
    {% endif %}
	
    # Z Homing
    {% if Z %}
	    {% if verbose %}
            { action_respond_info("Homing Z") }
        {% endif %}
        G0 X{x_position_center} Y{y_position_center} F{(probe_xy_speed * 60)}
		ACTIVATE_PROBE
        G28 Z
		DEACTIVATE_PROBE
        G0 Z{homing_zhop} F{zhop_speed}
    {% endif %}
    
    # Reset any acceleration changes
    {% if printer.toolhead.max_accel != cur_accel %}
        SET_VELOCITY_LIMIT ACCEL={cur_accel} ACCEL_TO_DECEL={cur_accel_to_decel}
    {% endif %}
    
    # Complete all moves
    M400
    STATUS_LEDS COLOR="READY"

# SENSORLESS HOMING
[gcode_macro _HOME_X]
description: Home X with modified current
gcode:
    {% set HOME_CUR = params.CURRENT|default(0.500)|float %}
    {% set HOME_ACCEL = params.ACCEL|default(6000)|float %}
    {% set BOUNCE = params.BOUNCE|default(0)|float %}
    {% set BOUNCE_SPEED = params.BOUNCE_SPEED|default(25)|float %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
    {% set RUN_CUR = driver_config.run_current %}
    {% set WAIT_TIME = params.WAIT_TIME|default(1000)|int %}

    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
	
    # Set homing acceleration
    SET_VELOCITY_LIMIT ACCEL={HOME_ACCEL} ACCEL_TO_DECEL={(HOME_ACCEL * 0.5)}
	
    # Pause to ensure driver stall flag is clear
    G4 P{WAIT_TIME}
	
    # Home
    G28 X0
    {% if BOUNCE %}
        # Move away
        G91
        G0 X{BOUNCE} F{(BOUNCE_SPEED * 60)}
        G90
    {% endif %}
	
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}
	
    # Pause to ensure driver stall flag is clear
    G4 P{WAIT_TIME}

[gcode_macro _HOME_Y]
description: Home Y with modified current
gcode:
    {% set HOME_CUR = params.CURRENT|default(0.500)|float %}
    {% set HOME_ACCEL = params.ACCEL|default(6000)|float %}
    {% set BOUNCE = params.BOUNCE|default(0)|float %}
    {% set BOUNCE_SPEED = params.BOUNCE_SPEED|default(25)|float %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_y'] %}
    {% set RUN_CUR = driver_config.run_current %}
    {% set WAIT_TIME = params.WAIT_TIME|default(1000)|int %}
    
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
	
    # Set homing acceleration
    SET_VELOCITY_LIMIT ACCEL={HOME_ACCEL} ACCEL_TO_DECEL={(HOME_ACCEL * 0.5)}
	
    # Pause to ensure driver stall flag is clear
    G4 P{WAIT_TIME}
	
    # Home
    G28 Y0
    {% if BOUNCE %}
        # Move away
        G91
        G0 Y{BOUNCE} F{(BOUNCE_SPEED * 60)}
        G90
    {% endif %}
	
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}
	
    # Pause to ensure driver stall flag is clear
    G4 P{WAIT_TIME}
