[gcode_macro PARK_FRONT]
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}

    _CG28
    SAVE_GCODE_STATE NAME=PARK_FRONT

    {% if printer.extruder.can_extrude %}
        {% if params.E is defined %}
            {% set E = params.E|float|abs %}
            {% if verbose %}
                RESPOND MSG="Retraction overrided with parameter, Extruder retraction = {E}"
            {% endif %}
        {% else %}
            {% if verbose %}
                RESPOND MSG="Firmware retraction enabled, Extruder retraction = {printer.firmware_retraction.retract_length}"
            {% endif %}
            G10
        {% endif %}
	    {% if E is defined and E > 0 %}
            G92 E0
            G1 E-{E} F2100
        {% endif %}
    {% endif %}

    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z-160} F{St}
    RESTORE_GCODE_STATE NAME=PARK_FRONT


[gcode_macro PARK_FRONT_LOW]
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}

    _CG28
    SAVE_GCODE_STATE NAME=PARK_FRONT_LOW

    {% if printer.extruder.can_extrude %}
        {% if params.E is defined %}
            {% set E = params.E|float|abs %}
            {% if verbose %}
                RESPOND MSG="Retraction overrided with parameter, Extruder retraction = {E}"
            {% endif %}
        {% else %}
            {% if verbose %}
                RESPOND MSG="Firmware retraction enabled, Extruder retraction = {printer.firmware_retraction.retract_length}"
            {% endif %}
            G10
        {% endif %}
	    {% if E is defined and E > 0 %}
            G92 E0
            G1 E-{E} F2100
        {% endif %}
    {% endif %}

    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F{St}
    RESTORE_GCODE_STATE NAME=PARK_FRONT_LOW


[gcode_macro PARK_FRONT_LEFT]
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}

    _CG28
    SAVE_GCODE_STATE NAME=PARK_FRONT_LEFT

    {% if printer.extruder.can_extrude %}
        {% if params.E is defined %}
            {% set E = params.E|float|abs %}
            {% if verbose %}
                RESPOND MSG="Retraction overrided with parameter, Extruder retraction = {E}"
            {% endif %}
        {% else %}
            {% if verbose %}
                RESPOND MSG="Firmware retraction enabled, Extruder retraction = {printer.firmware_retraction.retract_length}"
            {% endif %}
            G10
        {% endif %}
	    {% if E is defined and E > 0 %}
            G92 E0
            G1 E-{E} F2100
        {% endif %}
    {% endif %}

    G90
    G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_minimum.y+10} Z{printer.toolhead.axis_maximum.z-160} F{St}
    RESTORE_GCODE_STATE NAME=PARK_FRONT_LEFT


[gcode_macro PARK_FRONT_RIGHT]
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}

    _CG28
    SAVE_GCODE_STATE NAME=PARK_FRONT_RIGHT

    {% if printer.extruder.can_extrude %}
        {% if params.E is defined %}
            {% set E = params.E|float|abs %}
            {% if verbose %}
                RESPOND MSG="Retraction overrided with parameter, Extruder retraction = {E}"
            {% endif %}
        {% else %}
            {% if verbose %}
                RESPOND MSG="Firmware retraction enabled, Extruder retraction = {printer.firmware_retraction.retract_length}"
            {% endif %}
            G10
        {% endif %}
	    {% if E is defined and E > 0 %}
            G92 E0
            G1 E-{E} F2100
        {% endif %}
    {% endif %}

    G90
    G0 X{printer.toolhead.axis_maximum.x-10} Y{printer.toolhead.axis_minimum.y+10} Z{printer.toolhead.axis_maximum.z-160} F{St}
    RESTORE_GCODE_STATE NAME=PARK_FRONT_RIGHT


[gcode_macro PARK_REAR_LEFT]
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}

    _CG28
    SAVE_GCODE_STATE NAME=PARK_REAR_LEFT

    {% if printer.extruder.can_extrude %}
        {% if params.E is defined %}
            {% set E = params.E|float|abs %}
            {% if verbose %}
                RESPOND MSG="Retraction overrided with parameter, Extruder retraction = {E}"
            {% endif %}
        {% else %}
            {% if verbose %}
                RESPOND MSG="Firmware retraction enabled, Extruder retraction = {printer.firmware_retraction.retract_length}"
            {% endif %}
            G10
        {% endif %}
	    {% if E is defined and E > 0 %}
            G92 E0
            G1 E-{E} F2100
        {% endif %}
    {% endif %}

    G90
    G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-15} Z{printer.toolhead.axis_maximum.z-150} F{St}
    RESTORE_GCODE_STATE NAME=PARK_REAR_LEFT


[gcode_macro PARK_REAR_RIGHT]
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}

    _CG28
    SAVE_GCODE_STATE NAME=PARK_REAR_RIGHT

    {% if printer.extruder.can_extrude %}
        {% if params.E is defined %}
            {% set E = params.E|float|abs %}
            {% if verbose %}
                RESPOND MSG="Retraction overrided with parameter, Extruder retraction = {E}"
            {% endif %}
        {% else %}
            {% if verbose %}
                RESPOND MSG="Firmware retraction enabled, Extruder retraction = {printer.firmware_retraction.retract_length}"
            {% endif %}
            G10
        {% endif %}
	    {% if E is defined and E > 0 %}
            G92 E0
            G1 E-{E} F2100
        {% endif %}
    {% endif %}

    G90
    G0 X{printer.toolhead.axis_maximum.x-20} Y{printer.toolhead.axis_maximum.y-25} Z{printer.toolhead.axis_maximum.z-150} F{St}
    RESTORE_GCODE_STATE NAME=PARK_REAR_RIGHT


[gcode_macro PARK_CENTER]
description: Park center of bed and 150mm down from max Z (good for checking z belt tention).
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}

    _CG28
    SAVE_GCODE_STATE NAME=PARK_CENTER

    {% if printer.extruder.can_extrude %}
        {% if params.E is defined %}
            {% set E = params.E|float|abs %}
            {% if verbose %}
                RESPOND MSG="Retraction overrided with parameter, Extruder retraction = {E}"
            {% endif %}
        {% else %}
            {% if verbose %}
                RESPOND MSG="Firmware retraction enabled, Extruder retraction = {printer.firmware_retraction.retract_length}"
            {% endif %}
            G10
        {% endif %}
	    {% if E is defined and E > 0 %}
            G92 E0
            G1 E-{E} F2100
        {% endif %}
    {% endif %}

    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z-55} F{St}
    RESTORE_GCODE_STATE NAME=PARK_CENTER


[gcode_macro PARK_BED]
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}

    _CG28
    SAVE_GCODE_STATE NAME=PARK_BED

    {% if printer.extruder.can_extrude %}
        {% if params.E is defined %}
            {% set E = params.E|float|abs %}
            {% if verbose %}
                RESPOND MSG="Retraction overrided with parameter, Extruder retraction = {E}"
            {% endif %}
        {% else %}
            {% if verbose %}
                RESPOND MSG="Firmware retraction enabled, Extruder retraction = {printer.firmware_retraction.retract_length}"
            {% endif %}
            G10
        {% endif %}
	    {% if E is defined and E > 0 %}
            G92 E0
            G1 E-{E} F2100
        {% endif %}
    {% endif %}

    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z30 F{St}
    RESTORE_GCODE_STATE NAME=PARK_BED
