[gcode_macro START_PRINT]
description: Machine heatup procedure before starting a print
variable_bed_temp: 0
variable_extruder_temp: 0
variable_z_adjust: 0
variable_soak: 0
variable_chamber_temp: 0
variable_chamber_maxtime: 0
variable_initial_tool: 0
variable_material: "XXX"
variable_fl_size: "0_0_0_0"
variable_filter_enabled: 0
gcode:
    # Get all the parameters passed from the slicer
    # Extruder and bed temperatures
    {% set BED_TEMP = params.BED_TEMP|default(printer["gcode_macro _USER_VARIABLES"].print_default_bed_temp)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(printer["gcode_macro _USER_VARIABLES"].print_default_extruder_temp)|float %}
    
    # Optionnal Z adjustement from the slicer profile (ex. use it if you have textured vs smooth slicer profiles) 
    {% set Z_ADJUST = params.Z_ADJUST|default(0)|float %}
    
    # Heatsoak time of the bed in minutes and chamber temperature wanted
    {% set SOAK = params.SOAK|default(printer["gcode_macro _USER_VARIABLES"].print_default_soak)|int %}
    {% set CHAMBER_TEMP = params.CHAMBER|default(printer["gcode_macro _USER_VARIABLES"].print_default_chamber_temp)|int %}
    {% set CHAMBER_MAXTIME = params.CHAMBER_MAXTIME|default(printer["gcode_macro _USER_VARIABLES"].print_default_chamber_max_heating_time)|int %}
    
    # Initial tool when using an MMU as the ERCF
    {% set INITIAL_TOOL = params.INITIAL_TOOL|default(0)|int %}
	
    # Default material type to 'XXX'
    {% set MATERIAL = params.MATERIAL|default(printer["gcode_macro _USER_VARIABLES"].print_default_material)|string %}
    
    # Get bounding box of the first layer
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
	
	# Get all the config options and configurations for this macro
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set light_intensity_start_print = printer["gcode_macro _USER_VARIABLES"].light_intensity_start_print %}
    {% set light_intensity_printing = printer["gcode_macro _USER_VARIABLES"].light_intensity_printing %}
    {% set force_homing_in_start_print = printer["gcode_macro _USER_VARIABLES"].force_homing_in_start_print %}
    {% set ercf_enabled = printer["gcode_macro _USER_VARIABLES"].ercf_enabled %}
    {% set filter_enabled = 1 if (MATERIAL == "ABS") or (MATERIAL == "ASA") else 0 %}


    # Set the variables to be used in all the modules based on the slicer parameters
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=bed_temp VALUE={BED_TEMP}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=extruder_temp VALUE={EXTRUDER_TEMP}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=z_adjust VALUE={Z_ADJUST}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=soak VALUE={SOAK}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=chamber_temp VALUE={CHAMBER_TEMP}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=chamber_maxtime VALUE={CHAMBER_MAXTIME}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=initial_tool VALUE={INITIAL_TOOL}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=material VALUE='"{MATERIAL}"'
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=fl_size VALUE='"{FL_SIZE}"'
	SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=filter_enabled VALUE={filter_enabled}
	
	{% if MATERIAL not in printer["gcode_macro _USER_VARIABLES"].material_parameters %}
        RESPOND MSG="Material '{MATERIAL}' is unknown!"
        { action_raise_error("Add this new material to your material_parameters variable!") }
    {% else %}
        RESPOND MSG="Material '{MATERIAL}' is used"
        {% set material = printer["gcode_macro _USER_VARIABLES"].material_parameters[MATERIAL] %}
    {% endif %}
	
    STATUS_LEDS COLOR="BUSY"
    LIGHT_ON S={light_intensity_start_print}
	
	{% if ercf_enabled %}
        {% if verbose %}
            RESPOND MSG="ERCF Servo Up"
        {% endif %}
        ERCF_SERVO_UP
    {% endif %}
	
	CLEAR_PAUSE
	BED_MESH_CLEAR
	SET_GCODE_OFFSET Z=0
    M221 S100
    M220 S100
    G92 E0
    G90
    M83
	
	# Material parameters
	SET_RETRACTION RETRACT_LENGTH={material.retract_length} RETRACT_SPEED={material.retract_speed} UNRETRACT_EXTRA_LENGTH={material.unretract_extra_length} UNRETRACT_SPEED={material.unretract_speed}
	SET_PRESSURE_ADVANCE ADVANCE={material.pressure_advance}
	
	 # Homing before START_PRINT movements and actions
	{% if force_homing_in_start_print %}
        G28
    {% else %}
        _CG28
    {% endif %}
	
	# Here is the core of the START_PRINT were we get the startprint_actions variable to do the procedure in the correct order.
	_MODULE_HEATSOAK_BED
	_MODULE_HEATSOAK_CHAMBER
    _MODULE_TILTING
	_MODULE_BED_MESH
	_MODULE_EXTRUDER_HEATING
	_MODULE_PURGE
	_MODULE_CLEAN
	_MODULE_PRIMELINE
	
	# Final material parameters
	SET_GCODE_OFFSET Z_ADJUST={material.additional_z_offset} MOVE=1
	{% if filter_enabled %}
        START_FILTER SPEED={material.filter_speed / 100}
    {% endif %}
    
	STATUS_LEDS COLOR="PRINTING"
	LIGHT_ON S={light_intensity_printing}
	
    {% if verbose %}
        RESPOND MSG="Start printing!"
    {% endif %}
	
	G92 E0.0

[gcode_macro _MODULE_HEATSOAK_BED]
gcode:
    {% set BED_TEMP = printer["gcode_macro START_PRINT"].bed_temp %}
    {% set SOAK = printer["gcode_macro START_PRINT"].soak %}
    {% set CHAMBER_TEMP = printer["gcode_macro START_PRINT"].chamber_temp %}
	
	{% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}
	
	{% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
	
	STATUS_LEDS COLOR="HEATING"
	
	G0 X{max_x|int / 2} Y{max_y|int / 3} Z40 F{St}
	
	 {% if (CHAMBER_TEMP > 0) %}
        START_FILTER SPEED=1
    {% endif %}
	
	HEATSOAK_BED TEMP={BED_TEMP} SOAKTIME={ SOAK if (SOAK > 0) and (printer.heater_bed.target < (BED_TEMP - 8)) else 0 }

[gcode_macro _MODULE_HEATSOAK_CHAMBER]
gcode:
    {% set CHAMBER_TEMP = printer["gcode_macro START_PRINT"].chamber_temp %}
    {% set CHAMBER_MAXTIME = printer["gcode_macro START_PRINT"].chamber_maxtime %}
	
    {% set safe_extruder_temp = printer["gcode_macro _USER_VARIABLES"].safe_extruder_temp|float %}
    
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}

    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}

    G0 X{max_x|int / 2} Y{max_y|int / 3} Z50 F{St}
	
	{% if CHAMBER_TEMP > 0 %}
	    START_FILTER SPEED=1
		
		M109 S{safe_extruder_temp}
		HEATSOAK_CHAMBER TEMP={CHAMBER_TEMP} MAXTIME={CHAMBER_MAXTIME}
		
		STOP_FILTER
	{% endif %}

[gcode_macro _MODULE_TILTING]
gcode:
    {% set force_homing_in_start_print = printer["gcode_macro _USER_VARIABLES"].force_homing_in_start_print %}
    _TILT_CALIBRATE FORCE={force_homing_in_start_print}

[gcode_macro _MODULE_EXTRUDER_HEATING]
gcode:
    {% set EXTRUDER_TEMP = printer["gcode_macro START_PRINT"].extruder_temp %}
    {% set INITIAL_TOOL = printer["gcode_macro START_PRINT"].initial_tool %}

    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set ercf_enabled = printer["gcode_macro _USER_VARIABLES"].ercf_enabled %}
	
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}
    {% set Px, Py, Pz = printer["gcode_macro _USER_VARIABLES"].purge_bucket_xyz|map('float') %}
	
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
	
	STATUS_LEDS COLOR="HEATING"
	
	_CONDITIONAL_MOVE_TO_PURGE_BUCKET
	M109 S{EXTRUDER_TEMP}
	G4 P{60000 * 0.5}
	
	{% if ercf_enabled %}
        ERCF_RESET_STATS
        ERCF_CHANGE_TOOL_STANDALONE TOOL={INITIAL_TOOL}
        _DO_ERROR_ERCF_PAUSE
    {% endif %}
	
    {% if verbose %}
        RESPOND MSG="Extruder temperature OK"
    {% endif %}

[gcode_macro _MODULE_PURGE]
gcode:
    {% set EXTRUDER_TEMP = printer["gcode_macro START_PRINT"].extruder_temp %}
	
	PURGE TEMP={EXTRUDER_TEMP}

[gcode_macro _MODULE_CLEAN]
gcode:
    CLEAN_NOZZLE

[gcode_macro _MODULE_BED_MESH]
gcode:
    {% set FL_SIZE = printer["gcode_macro START_PRINT"].fl_size %}
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
	
	STATUS_LEDS COLOR="MESHING"
	
    {% if verbose %}
        RESPOND MSG="Bed mesh measurement..."
    {% endif %}
	
	{% set mesh_ready = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].ready %}
	{% if mesh_ready %}
        ADAPTIVE_BED_MESH
    {% else %}
        ADAPTIVE_BED_MESH SIZE={FL_SIZE}
    {% endif %}

[gcode_macro _MODULE_PRIMELINE]
gcode:
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES"].zhop_speed * 60 %}
    {% set prime_line_x, prime_line_y = printer["gcode_macro _USER_VARIABLES"].prime_line_xy|map('float') %}
    
    G91
    M83
    G1 Z5 F{Sz}
    
    ; Starting position
    G90
    G1 X{prime_line_x} Y{prime_line_y} F{St}
    G1 Z0.3 F{Sz|int / 2}
    
    ; Add pressure in the nozzle
    G92 E0
    G1 E18 F300
    
    ; Prime line
    G92 E0
    G1 Y{prime_line_y + 80} E10 F2500
    G92 E0
    G1 Y{prime_line_y + 130} E5 F1500
    
    ; Retract and Z-hop
    G92 E0
    G1 Z2.0 E-0.1 F{Sz}
    G92 E0
    G1 Z5 F{Sz}
