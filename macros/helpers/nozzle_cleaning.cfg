[gcode_macro CLEAN_NOZZLE]
description: Wipe the nozzle on the brush
gcode:
    {% set brush_clean_accel = printer["gcode_macro _USER_VARIABLES"].brush_clean_accel %}
    {% set brush_over_y_axis = printer["gcode_macro _USER_VARIABLES"].brush_over_y_axis %}
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES"].zhop_speed * 60 %}
    {% set Sc = printer["gcode_macro _USER_VARIABLES"].brush_clean_speed * 60 %}
	
    {% set Bx, By, Bz = printer["gcode_macro _USER_VARIABLES"].brush_xyz|map('float') %}
    
    STATUS_LEDS COLOR="CLEANING"
	
    {% if verbose %}
        RESPOND MSG="Nozzle cleaning..."
    {% endif %}
    
    # Set the cleaning acceleration prior to any movement
    {% set saved_accel = printer.toolhead.max_accel %}
    {% set saved_decel = printer.toolhead.max_accel_to_decel %}
    
    M204 S{brush_clean_accel}
	
    # Move to purge zone (left side)
    G90
    _CONDITIONAL_MOVE_TO_PURGE_BUCKET Z_DROP=1
    # Move to center of the brush
    G1 X{Bx} Y{By} F{St}
    G1 Z{Bz} F{St}
    # Wipe procedure
    G91
    {% if brush_over_y_axis %}
        {% for wipe in range(6) %}
            G1 Y-5 F{Sc}
            G1 Y+5 F{Sc}
        {% endfor %}
    {% endif %}
    
    G1 X+20 F{Sc}
	
    {% for wipe in range(6) %}
        G1 X-40 F{Sc}
        G1 X+40 F{Sc}
    {% endfor %}
    
    G90
	
    # Reset acceleration values to what it was before
    SET_VELOCITY_LIMIT ACCEL={saved_accel} ACCEL_TO_DECEL={saved_decel}
    STATUS_LEDS COLOR="READY"

[gcode_macro PURGE]
description: Purge a specific amount of filament ontop of the purge bucket
gcode:
    {% set DISTANCE = params.DISTANCE|default(printer["gcode_macro _USER_VARIABLES"].purge_distance)|int %}
    {% set OOZE_TIME = params.OOZE_TIME|default(printer["gcode_macro _USER_VARIABLES"].purge_ooze_time)|int %}
    {% set TEMP = params.TEMP|default(printer["gcode_macro _USER_VARIABLES"].print_default_extruder_temp)|float %}
    {% set Z_DROP = params.Z_DROP|default(1)|int %}
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES"].zhop_speed * 60 %}
    
    STATUS_LEDS COLOR="CLEANING"
    
    {% if verbose %}
        RESPOND MSG="Purge filament..."
    {% endif %}
	
    G90
    _CONDITIONAL_MOVE_TO_PURGE_BUCKET Z_DROP={Z_DROP}
    
    # Heat if needed and purge
    _LOW_TEMP_CHECK T={TEMP}
    G92 E0
    G1 E{DISTANCE|float} F150
    
    # Retract
    G92 E0
    G1 E-1.7 F2100
    G1 E-18.3 F150
    G92 E0
    
    # Wait 20s to let the nozzle ooze before cleaning
    G4 P{OOZE_TIME * 1000}
	
    STATUS_LEDS COLOR="READY"

[gcode_macro _CONDITIONAL_MOVE_TO_PURGE_BUCKET]
description: Move over the purge bucket
gcode:
    {% set Z_DROP = params.Z_DROP|default(1)|int %}
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES"].zhop_speed * 60 %}
    {% set Px, Py, Pz = printer["gcode_macro _USER_VARIABLES"].purge_bucket_xyz|map('float') %}
    
    SAVE_GCODE_STATE NAME=CONDITIONAL_MOVE_TO_PURGE_BUCKET_STATE
    G90
    
    {% if Z_DROP == 1 %}
        G1 X{Px} Y{Py} F{St}
		G1 Z{Pz} F{St}
    {% else %}
        # If Z_DROP=0 there is probably some parts on the bed: we do not move the
        # Z axis and purge from an higher position.
        G1 X{Px} Y{Py} F{St}
    {% endif %}
    
    RESTORE_GCODE_STATE NAME=CONDITIONAL_MOVE_TO_PURGE_BUCKET_STATE
