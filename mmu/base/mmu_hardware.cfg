########################################################################################################################
# Happy Hare MMU hardware config file with config for MMB10 MCU board
#
# EDIT THIS FILE BASED ON YOUR SETUP
#
# See 'mmu.cfg' for serial definition and pins aliaes
#


# FILAMENT DRIVE GEAR STEPPER  -----------------------------------------------------------------------------------------
# Note that 'toolhead' & 'mmu_gear' endstops will automatically be added if a toolhead sensor or gate sensor is defined
#
[tmc2209 stepper_mmu_gear]
uart_pin: mmu:MMU_GEAR_UART
run_current: 0.8			    # ERCF BOM NEMA17 motor
hold_current: 0.1			    # Recommend to be small if not using "touch" or move (TMC stallguard)
interpolate: True
sense_resistor: 0.110			# Usually 0.11, 0.15 for BTT TMC2226
stealthchop_threshold: 0		# Spreadcycle has more torque and better at speed

[stepper_mmu_gear]
step_pin: mmu:MMU_GEAR_STEP
dir_pin: mmu:MMU_GEAR_DIR
enable_pin: !mmu:MMU_GEAR_ENABLE
rotation_distance: 22.7316868	# Bondtech 5mm Drive Gears. Overriden by 'mmu_gear_rotation_distance' in mmu_vars.cfg
gear_ratio: 80:20			    # E.g. ERCF 80:20, Tradrack 50:17
microsteps: 16 				    # Recommend 16. Increase only if you "step compress" issues when syncing
full_steps_per_rotation: 200	# 200 for 1.8 degree, 400 for 0.9 degree


# SELECTOR STEPPER  ----------------------------------------------------------------------------------------------------
# Consult doc if you want to setup selector for "touch" homing instead or physical endstop
#
[tmc2209 stepper_mmu_selector]
uart_pin: mmu:MMU_SEL_UART
run_current: 0.4		    	# ERCF BOM NEMA17 motor
hold_current: 0.2			    # Can be small if not using "touch" movement (TMC stallguard)
interpolate: True
sense_resistor: 0.110
stealthchop_threshold: 100		# Stallguard "touch" movement (slower speeds) best done with stealthchop

[stepper_mmu_selector]
step_pin: mmu:MMU_SEL_STEP
dir_pin: mmu:MMU_SEL_DIR
enable_pin: !mmu:MMU_SEL_ENABLE
rotation_distance: 40
microsteps: 16 				        # Don't need high fidelity
full_steps_per_rotation: 200		# 200 for 1.8 degree, 400 for 0.9 degree
endstop_pin: ^mmu:MMU_SEL_ENDSTOP	# Selector microswitch
endstop_name: mmu_sel_home


# SELECTOR SERVO -------------------------------------------------------------------------------------------------------
# Basic servo PWM setup. If these values are changed then the angles defined for different positions will also change
#
[mmu_servo mmu_servo]
pin: mmu:MMU_SERVO
maximum_servo_angle: 180
minimum_pulse_width: 0.00085
maximum_pulse_width: 0.00215


# OPTIONAL GANTRY SERVO FOR FILAMETRIX FILAMENT CUTTER ----------------------------------------------------------------
# Basic servo PWM setup. If these values are changed then the angles defined for different positions will also change
#
# Uncomment only if you have gantry servo
#
#[mmu_servo mmu_gantry_servo]
#pin: 
#maximum_servo_angle:180
#minimum_pulse_width: 0.00075
#maximum_pulse_width: 0.00225
#initial_angle: 180


# ENCODER -------------------------------------------------------------------------------------------------------------
# Encoder measures distance, monitors for runout and clogging and constantly calculates % flow rate
# Note that the encoder_resolution set if is purely a default to get started.  It is set through calibration
# and stored in mmu_vars.cfg
#
[mmu_encoder mmu_encoder]
encoder_pin: ^mmu:MMU_ENCODER	# EASY-BRD: ^PA6, Flytech ERB: ^gpio22
encoder_resolution: 1.0			# This is just a starter value. Overriden by `mmu_encoder_resolution` in mmm_vars.cfg
desired_headroom: 11.0			# The clog/runout headroom that MMU attempts to maintain (closest point to triggering runout)
average_samples: 4			    # The "damping" effect of last measurement (higher value means slower clog_length reduction)
flowrate_samples: 20			# How many extruder "movements" on the encoder to measure over for flowrate calc


# FILAMENT SENSORS -----------------------------------------------------------------------------------------------------
# Define the pins for optional sensors in the filament path. All but the pre-gate sensors will be automatically setup as
# both endstops (for homing) and sensors for visibility purposes.
#
# 'pre_gate_switch_pin_X' .. 'mmu_pre_gate_X` sensor detects filament at entry to MMU. X=gate number (0..N)
# 'gate_switch_pin'       .. 'mmu_gate' sensor detects filament at the gate of the MMU
# 'toolhead_switch_pin'   .. 'toolhead' sensor detects filament after extruder entry
# 'extruder_switch_pin'   .. 'extruder' sensor detects filament just before the extruder entry
#
# Sync motor feedback will typically have a tension switch (more important) or both tension and compression
# 'sync_feedback_tension_pin'     .. pin for switch activated when filament is under tension
# 'sync_feedback_compression_pin' .. pin for switch activated when filament is under compression
#
# Simply define pins for any sensor you want to enable, if pin is not set (or the alias is empty) it will be ignored.
# You can also just comment out what you are not using
#
[mmu_sensors]
pre_gate_switch_pin_0: ^mmu:MMU_PRE_GATE_0
pre_gate_switch_pin_1: ^mmu:MMU_PRE_GATE_1
pre_gate_switch_pin_2: ^mmu:MMU_PRE_GATE_2
pre_gate_switch_pin_3: ^mmu:MMU_PRE_GATE_3
#pre_gate_switch_pin_4: ^mmu:MMU_PRE_GATE_4
#pre_gate_switch_pin_5: ^mmu:MMU_PRE_GATE_5

#gate_switch_pin: ^mmu:MMU_GATE_SENSOR
#extruder_switch_pin: 
toolhead_switch_pin: !EBB: PB6

#sync_feedback_tension_pin: 
#sync_feedback_compression_pin: 


## MMU OPTIONAL NEOPIXEL LED SUPPORT ------------------------------------------------------------------------------------
## Define the led connection, type and length
##
## (comment out this section if you don't have leds)
#[neopixel mmu_leds]
#pin: mmu:MMU_NEOPIXEL
#chain_count: 5			# Number gates x1 or x2 + 1 (if you want status)
#color_order: GRBW		# Set based on your particular neopixel specification
#
#
## MMU LED EFFECT SEGMENTS ----------------------------------------------------------------------------------------------
## Define neopixel LEDs for your MMU. The chain_count must be large enough for your desired ranges:
##   exit   .. this set of LEDs, one for every gate, usually would be mounted at the exit point of the gate
##   entry  .. this set of LEDs, one for every gate, could be mounted at the entry point of filament into the MMU/buffer
##   status .. this single LED represents the status of the currently selected filament
##
## Note that all sets are optional. You can opt simple to have just the 'exit' set for example. The advantage to having
## both entry and exit LEDs is, for example, so that 'entry' can display gate status while 'exit' displays the color
## 
## The effects requires the installation of Julian Schill's awesome LED effect module:
##   https://github.com/julianschill/klipper-led_effect
## LED's are indexed in the chain from 1..N. Thus to set up LED's on 'exit' and a single 'status' LED on a 4 gate MMU:
##   exit_range:   1-4
##   status_index: 5
## In this example no 'entry' set is configured.
##
## Note the range order is important and depends on your wiring. Thus 1-4 and 4-1 both represent the same LED range
## but mapped to increasing or decreasing gates respectively
##
## Note that Happy Hare provides a convenience wrapper [mmu_led_effect] that not only creates an effect on each of the
## [mmu_leds] specified segments but also each individual LED for atomic control. See mmu_leds.cfg for examples
##
## (comment out this section if you don't have leds)
#[mmu_leds]
#num_gates: 4
#led_strip: neopixel:mmu_leds
#exit_range: 1-4
##entry_range: 5-{mmu_num_leds}
#status_index: 5
#frame_rate: 24
#
